class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        if(list1 == null){
            return list2 ;
        } else if (list2 == null){
            return list1 ;
        } else if (list1 == null && list2 == null){
            return null ;
        }

        ListNode list3 = new ListNode(list1.val) ; 
        ListNode l3 = list3 ;

        ListNode l1 = list1.next ; 
        
        while(l1 != null){
            l3.next = new ListNode(l1.val) ; 
            l3 = l3.next ;
            l1 = l1.next ;
        }

        ListNode l2 = list2 ;
        // l1 = l1.next
        while(l2 != null){
            l3.next = new ListNode(l2.val) ;
            l3 = l3.next ; 
            l2 = l2.next ;
        }


        ListNode sorted ;
        boolean swapped;

        do{
            sorted = list3 ;
            swapped = false ;

            while(sorted != null && sorted.next != null){
                if(sorted.val > sorted.next.val){
                    int temp = sorted.val ;
                    sorted.val = sorted.next.val ;
                    sorted.next.val = temp ;
                    swapped = true ;
                }

                sorted = sorted.next ;
            }

        }while(swapped) ;

        return list3 ;
    
    }
}
